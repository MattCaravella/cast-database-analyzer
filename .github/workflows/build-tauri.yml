name: Build and Release CAST Database Analyzer

on:
  push:
    tags:
      - 'v*' # Triggers on version tags like v1.0.0
  workflow_dispatch: # Allows manual trigger from GitHub Actions tab

jobs:
  build-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          # Remove cache since we don't have package-lock.json

      - name: Install frontend dependencies
        run: npm install

      - name: Install Tauri CLI
        run: |
          cargo install tauri-cli --version "^2.0.0" --locked
          
      - name: Build Tauri app
        run: cargo tauri build
        working-directory: .
        
      - name: Debug - List build artifacts
        run: |
          echo "Checking for build artifacts..."
          find . -name "*.msi" -type f 2>/dev/null || echo "No .msi files found"
          find . -name "*.exe" -type f 2>/dev/null || echo "No .exe files found"
          echo "Directory structure:"
          ls -la src-tauri/target/release/bundle/ 2>/dev/null || echo "Bundle directory not found"
        shell: bash
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            src-tauri/target/release/bundle/**/*.msi
            src-tauri/target/release/bundle/**/*.exe
          draft: true
          prerelease: false
          name: CAST Database Analyzer ${{ github.ref_name }}
          body: |
            ## CAST Database Analyzer ${{ github.ref_name }}
            
            Professional telecommunications forensics tool for analyzing CDR records, text messages, and digital evidence.
            
            ### Downloads:
            - **Windows Installer (.msi)**: Recommended for most users
            - **Windows Executable (.exe)**: Alternative NSIS installer
            
            ### Installation:
            1. Download the .msi file
            2. Run the installer
            3. Launch "CAST Database Analyzer" from Start Menu
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}